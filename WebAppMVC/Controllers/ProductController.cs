using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Text.Json;
using System.Threading.Tasks;
using WebAppMVC.Models;
using System.Text;

namespace WebAppMVC.Controllers
{
    public class ProductController : Controller
    {
        HttpClient _client;
        IConfiguration _configuration;
        public ProductController(IConfiguration configuration)
        {
            _configuration = configuration;
            string apiAddress = _configuration["ApiAddress"];//get the api base address from configuration file
            Uri baseAddress = new Uri(apiAddress); // create the Uri object and add the base address to it
            _client = new HttpClient();   //Create new client 
            _client.BaseAddress = baseAddress; // add the base address to the client 
        }
        //Get action
        public IActionResult Index()
        {
            IEnumerable<Product> model = new List<Product>(); // Create a model "Product" in MVC project , whose fields same as
                                                              // the fields in Product.cs in DAL project

            var response = _client.GetAsync(_client.BaseAddress + "/Product").Result;   // creating the Uri (baseaddress + Httpverb)
                                                                                        // and fetching the response from the api         
            if (response.IsSuccessStatusCode)
            {
                var data = response.Content.ReadAsStringAsync().Result; // read the Json data from the response
                model = JsonSerializer.Deserialize<IEnumerable<Product>>(data); // deserialize the Json data to the
                                                                                // IEnumerable<Product> to display in the view
            }
            return View(model);
        }
        // get the category list to bind to the dropdownlist in the view 
        IEnumerable<Category> GetCategories()
        {
            IEnumerable<Category> model = new List<Category>(); // Create a model "Category" in MVC project , whose fields same as
                                                                // the fields in Category.cs in DAL project

            var response = _client.GetAsync(_client.BaseAddress + "/Category").Result;   // creating the Uri (baseaddress + Httpverb)
                                                                                         // and fetching the response from the api         
            if (response.IsSuccessStatusCode)
            {
                var data = response.Content.ReadAsStringAsync().Result; // read the Json data from the response
                model = JsonSerializer.Deserialize<IEnumerable<Category>>(data); // deserialize the Json data to the
                                                                                 // IEnumerable<Category> to display in the view
            }
            return model;
        }

        //Create product

        public IActionResult Create()
        {
            // get the list of categories to teh viewbag 
            ViewBag.CategoryList = GetCategories();
            return View();
        }

        [HttpPost]
        public IActionResult Create(Product model)
        {
            ModelState.Remove("ProductId"); // remove ProductID to validate as we are not providing ProductID from UI ,
                                            // it would be autogenerated at the DB
            if (ModelState.IsValid)
            {
                string strdata = JsonSerializer.Serialize(model); // converting model to JSON format 
                StringContent content = new StringContent(strdata, Encoding.UTF8, "application/json"); // StringContent class creates a formatted text
                                                                                                       // appropriate for the http server/client
                                                                                                       // communication.
                var response = _client.PostAsync(_client.BaseAddress + "/Product", content).Result;  // creting the Uri for post request and calling
                                                                                                     // the PostMethod of the API using "PostAsync"

                if (response.IsSuccessStatusCode)  // verify the statuscode . if it is success , redirect to Index action
                {
                    return RedirectToAction("Index");
                }

            }
            ViewBag.CategoryList = GetCategories(); //if  Model is not valid then bind the dropdown with the  list of categories to the viewbag 
            return View();

        }

        public IActionResult Edit(int id)
        {
            // get the list of categories to the viewbag 
            ViewBag.CategoryList = GetCategories();
            Product model = new Product(); // Create a model "Product" in MVC project , whose fields same as
                                           // the fields in Product.cs in DAL project

            var response = _client.GetAsync(_client.BaseAddress + "/Product/" + id).Result;   // creating the Uri (baseaddress + Httpverb)
                                                                                              // and fetching the response from the api
                                                                                              // 
            if (response.IsSuccessStatusCode)
            {
                var data = response.Content.ReadAsStringAsync().Result; // read the Json data from the response
                model = JsonSerializer.Deserialize<Product>(data); // deserialize the Json data to the
                                                                   // IEnumerable<Product> to display in the view
            }
            return View("Create", model);

        }
    [HttpPost]
    public IActionResult Edit(Product model)
    {

        //ModelState.Remove("ProductId"); //commenting this line becoz Productid is mandatory for Update operation

        if (ModelState.IsValid)
        {
            string strdata = JsonSerializer.Serialize(model); // converting model to JSON format 
            StringContent content = new StringContent(strdata, Encoding.UTF8, "application/json"); // StringContent class creates a formatted text
                                                                                                    // appropriate for the http server/client
                                                                                                    // communication.
            var response = _client.PutAsync(_client.BaseAddress + "/product/" + model.ProductId, content).Result;  

            if (response.IsSuccessStatusCode)  // verify the statuscode . if it is success , redirect to Index action
            {
                return RedirectToAction("Index");
            }

        }
        ViewBag.CategoryList = GetCategories();
        return View("Create", model);
    }

        public IActionResult Delete(int id)
        {
            var response = _client.DeleteAsync(_client.BaseAddress + "/Product/" + id).Result;
            if (response.IsSuccessStatusCode)
            {
                return RedirectToAction("Index");
            }
            return RedirectToAction("Index");
        }
    }
}
